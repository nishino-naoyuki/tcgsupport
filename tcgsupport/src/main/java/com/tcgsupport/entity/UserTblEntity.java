package com.tcgsupport.entity;

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;

import lombok.Data;

/**
 * 新規テーブル モデルクラス.
 * 
 * @author generated by ERMaster
 * @version $Id$
 */
@Data
@Entity 
@Table(name="USER_TBL")
public class UserTblEntity implements Serializable {

	/** serialVersionUID. */
	private static final long serialVersionUID = 1L;

	/** user_id. */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer userId;

	/** name. */
	private String name;

	/** mail. */
	private String mail;

	/** password. */
	private String password;

	/** adminflg. */
	private Integer adminflg;

	/** description. */
	private String description;

	/** icon. */
	private String icon;

	/** certification. */
	private Integer certification;

	/** regtime. */
	private Date regtime;

	/** updatetime. */
	private Date updatetime;

	/** 参加者テーブル 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="userId",insertable=true ,updatable=true)
	private Set<EntrantTblEntity> entrantTblSet;

	/** 試合テーブル 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="userId",insertable=true ,updatable=true)
	private Set<GameTblEntity> gameTblSet;

	/** シリーズポイント 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="userId",insertable=true ,updatable=true)
	private Set<SeriesePointEntity> seriesePointSet;

	/** 新規テーブル 一覧. */
	@OneToMany(cascade = CascadeType.ALL)
	@JoinColumn(name="userId",insertable=true ,updatable=true)
	private Set<SeriesTblEntity> seriesTblSet;
	/**
	 * コンストラクタ.
	 */
	public UserTblEntity() {
		this.entrantTblSet = new HashSet<EntrantTblEntity>();
		this.gameTblSet = new HashSet<GameTblEntity>();
		this.seriesePointSet = new HashSet<SeriesePointEntity>();
		this.seriesTblSet = new HashSet<SeriesTblEntity>();
	}


	/**
	 * {@inheritDoc}
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (getClass() != obj.getClass()) {
			return false;
		}
		UserTblEntity other = (UserTblEntity) obj;
		if (userId == null) {
			if (other.userId != null) {
				return false;
			}
		} else if (!userId.equals(other.userId)) {
			return false;
		}
		return true;
	}

	@PrePersist
    public void onPrePersist() {
		setRegtime(new Date());
		setUpdatetime(new Date());
    }

    @PreUpdate
    public void onPreUpdate() {
    	setUpdatetime(new Date());
    }
}
